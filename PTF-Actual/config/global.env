# ============================================================================
#                CS TEST AUTOMATION FRAMEWORK - GLOBAL CONFIGURATION
#                            Version 3.0.0 - Production Ready
# ============================================================================
# This file contains all configuration properties used throughout the framework.
# All properties listed here are actively used in the codebase.
# Properties support environment variable overrides and interpolation.
# ============================================================================

# ====================================================================================
# CORE FRAMEWORK CONFIGURATION
# ====================================================================================

# Project and environment settings (supports interpolation in other properties)
PROJECT=common
ENVIRONMENT=dev
BASE_URL=https://app.{ENVIRONMENT}.{PROJECT}.com

# ====================================================================================
# CROSS-DOMAIN NAVIGATION CONFIGURATION
# ====================================================================================

# Enable cross-domain navigation support (for SSO, Netscaler, etc.)
CROSS_DOMAIN_NAVIGATION_ENABLED=true
# Maximum time to wait for cross-domain navigation (ms)
CROSS_DOMAIN_NAVIGATION_TIMEOUT=60000
# Maximum number of redirects to follow
CROSS_DOMAIN_MAX_REDIRECTS=5
# Update original domain on navigation
CROSS_DOMAIN_UPDATE_ON_NAVIGATE=false
# Comma-separated list of additional auth providers to detect
# Default includes: netscaler,citrix,auth,login,sso,adfs,okta,ping,azure,keycloak
CROSS_DOMAIN_AUTH_PROVIDERS=

# ====================================================================================
# INTELLIGENT MODULE LOADING (Performance Optimization)
# ====================================================================================

# Enable intelligent module detection (detects which modules are needed: Browser, API, Database, SOAP)
# Default: false (disabled for backward compatibility)
# When enabled, framework loads only required modules based on scenario tags/steps
MODULE_DETECTION_ENABLED=false

# Module detection mode
# - auto: Pattern-based detection (analyzes step text)
# - explicit: Tag-based only (@api, @database, @ui, etc.)
# - hybrid: Tags first, then patterns as fallback (RECOMMENDED)
# Default: hybrid
MODULE_DETECTION_MODE=hybrid

# Step loading strategy
# - all: Load all step definitions (current behavior)
# - selective: Load only required step definitions (optimized)
# Default: all (for backward compatibility)
STEP_LOADING_STRATEGY=all

# Default to browser if no modules detected (backward compatibility)
# Default: true
MODULE_DETECTION_DEFAULT_BROWSER=true

# Enable module detection logging (debug mode)
# Default: false
MODULE_DETECTION_LOGGING=false

# ====================================================================================
# BROWSER CONFIGURATION
# ====================================================================================

# Browser type: chrome | firefox | webkit | edge | safari
# Default: chrome (when not specified)
BROWSER=chrome

# Run browser in headless mode
# Default: false (when not specified)
HEADLESS=false

# Browser viewport settings
BROWSER_VIEWPORT_WIDTH=1920
BROWSER_VIEWPORT_HEIGHT=1080

# Browser launch settings
BROWSER_LAUNCH_TIMEOUT=30000
BROWSER_DEVTOOLS=false
# Slow down browser actions by specified milliseconds (useful for debugging)
BROWSER_SLOWMO=0

# Browser security settings
BROWSER_IGNORE_HTTPS_ERRORS=true
BROWSER_NO_SANDBOX=false
BROWSER_DISABLE_GPU=false

# Browser locale and timezone
BROWSER_LOCALE=en-US
BROWSER_TIMEZONE=America/New_York

# Browser appearance preferences
BROWSER_COLOR_SCHEME=light
BROWSER_REDUCED_MOTION=no-preference
BROWSER_FORCED_COLORS=none

# Browser authentication (for sites with basic auth)
BROWSER_HTTP_USERNAME=
BROWSER_HTTP_PASSWORD=

# Additional browser options
BROWSER_OFFLINE=false
BROWSER_INCOGNITO=false
BROWSER_PRIVATE=false
BROWSER_USER_AGENT=
BROWSER_EXTRA_HEADERS=

# Browser geolocation settings (when needed for testing)
BROWSER_GEOLOCATION_LAT=
BROWSER_GEOLOCATION_LON=

# ====================================================================================
# BROWSER TIMEOUTS
# ====================================================================================

# Default timeout for all operations in milliseconds
# Used as global timeout when specific timeouts are not set
TIMEOUT=30000

# Specific timeout configurations
BROWSER_ACTION_TIMEOUT=10000
BROWSER_NAVIGATION_TIMEOUT=30000
BROWSER_AUTO_WAIT_TIMEOUT=5000
ELEMENT_TIMEOUT=10000


# ====================================================================================
# BROWSER INSTANCE MANAGEMENT
# ====================================================================================

# Browser reuse configuration
# Reuse browser between scenarios instead of closing after each one
# This can significantly speed up test execution but may cause state leakage
BROWSER_REUSE_ENABLED=true
# Clear cookies/storage when reusing browser (only when BROWSER_REUSE_ENABLED=true)
BROWSER_REUSE_CLEAR_STATE=true
# Close browser after N scenarios (0 = never close until end)
BROWSER_REUSE_CLOSE_AFTER_SCENARIOS=0

# Browser health and restart settings
BROWSER_AUTO_RESTART_ON_CRASH=true
BROWSER_MAX_RESTART_ATTEMPTS=3

# ====================================================================================
# BROWSER PROXY CONFIGURATION
# ====================================================================================

BROWSER_PROXY_ENABLED=false
# Proxy server URL (e.g., http://proxy.company.com:8080)
BROWSER_PROXY_SERVER=
BROWSER_PROXY_USERNAME=
BROWSER_PROXY_PASSWORD=
# Comma-separated list of hosts to bypass proxy
BROWSER_PROXY_BYPASS=localhost,127.0.0.1

# ====================================================================================
# MEDIA CAPTURE CONFIGURATION
# ====================================================================================

# Video recording: off | on | retain-on-failure | on-first-retry
# NOTE: With browser reuse enabled, video records entire browser session (not per scenario)
# To get per-scenario videos, set BROWSER_REUSE_ENABLED=false
BROWSER_VIDEO=retain-on-failure
# Video dimensions
BROWSER_VIDEO_WIDTH=1280
BROWSER_VIDEO_HEIGHT=720
VIDEO_DIR=./videos
# Trim video to last N seconds on failure
VIDEO_TRIM_ON_FAILURE=true

# Screenshot configuration
# When to capture: never | always | on-failure
SCREENSHOT_CAPTURE_MODE=on-failure
# Take screenshots on test/step failures
# DEPRECATED: Use SCREENSHOT_CAPTURE_MODE instead (kept for backward compatibility)
SCREENSHOT_ON_FAILURE=true
SCREENSHOT_ON_STEP_FAILURE=true
# Capture screenshot on successful scenarios (for documentation)
SCREENSHOT_ON_SUCCESS=false
# Take screenshot before assertions (helps debug failures)
PRE_ASSERTION_SCREENSHOT=true

# Browser trace recording (Playwright trace viewer)
# Capture modes: never | always | on-failure | on-first-retry
# With browser reuse enabled, traces are saved per-scenario (not per browser session)
TRACE_CAPTURE_MODE=on-failure
# DEPRECATED: Use TRACE_CAPTURE_MODE instead (kept for backward compatibility)
# To enable traces: set TRACE_CAPTURE_MODE=always instead of BROWSER_TRACE_ENABLED=true
BROWSER_TRACE_ENABLED=false

# HAR (HTTP Archive) recording for network analysis
# Capture modes: never | always | on-failure
# With browser reuse enabled, you get one HAR file per browser session (not per scenario)
HAR_CAPTURE_MODE=never
# Omit response content from HAR files (reduces file size)
BROWSER_HAR_OMIT_CONTENT=false
# DEPRECATED: Use HAR_CAPTURE_MODE instead (kept for backward compatibility)
# To enable HAR: set HAR_CAPTURE_MODE=always or on-failure (instead of BROWSER_HAR_ENABLED=true)
BROWSER_HAR_ENABLED=false

# Console log capture from browser
CONSOLE_LOG_CAPTURE=true
DEBUG_CONSOLE_LOGS=false

# Framework log level control
# LOG_LEVEL: DEBUG | INFO | WARN | ERROR
# - DEBUG: Show all logs including debug messages (most verbose)
# - INFO: Show informational messages, warnings, and errors (hide debug)
# - WARN: Show only warnings and errors
# - ERROR: Show only error messages (least verbose)
LOG_LEVEL=DEBUG

# ====================================================================================
# PARALLEL EXECUTION
# ====================================================================================

# Enable parallel execution
PARALLEL=false
# Maximum number of parallel workers
MAX_PARALLEL_WORKERS=4
# Actual number of workers to use (when parallel is enabled)
PARALLEL_WORKERS=3
# Worker heap memory size in MB (increase if workers run out of memory)
WORKER_HEAP_SIZE=1024
# Use worker threads instead of child processes
USE_WORKER_THREADS=true
# Enable parallel initialization for faster startup
PARALLEL_INITIALIZATION=true

# ====================================================================================
# TEST EXECUTION CONFIGURATION
# ====================================================================================

# Feature file paths (supports glob patterns)
FEATURES=test/*/features/*.feature
FEATURE_PATH=test/*/features

# Test retry configuration
RETRY_COUNT=2

# Step definition paths (semicolon separated, supports {project} placeholder)
STEP_DEFINITIONS_PATH=test/common/steps;test/{project}/steps;test/{project}/step-definitions;src/steps

# Selective step loading for performance
SELECTIVE_STEP_LOADING=true

# Step validation
VALIDATE_DUPLICATE_STEPS=true
VALIDATE_DUPLICATE_METHODS=true
# Validation level: error | warn | none
VALIDATION_LEVEL=error

# API test configuration
API_TESTS=
# Database test configuration
DB_TESTS=

# ====================================================================================
# ELEMENT INTERACTION
# ====================================================================================

# Number of retries for element operations
ELEMENT_RETRY_COUNT=3
# Clear input field before typing
ELEMENT_CLEAR_BEFORE_TYPE=true

# Spinner/loader detection (semicolon separated CSS selectors)
SPINNER_SELECTORS=.spinner;.loading;.loader;#loading
# Wait for spinners to disappear before actions
WAIT_FOR_SPINNERS=true

# ====================================================================================
# SELF-HEALING & AI
# ====================================================================================

# Enable self-healing for broken locators
SELF_HEALING_ENABLED=true

# Enable AI-powered features
AI_ENABLED=false
# Confidence threshold for AI predictions (0.0 to 1.0)
AI_CONFIDENCE_THRESHOLD=0.7

# ====================================================================================
# REPORTING CONFIGURATION
# ====================================================================================

# Report output directory
REPORTS_BASE_DIR=./reports
# Create timestamp-based folders for each test run
REPORTS_CREATE_TIMESTAMP_FOLDER=true
# Directory for test results (auto-generated if not set)
TEST_RESULTS_DIR=

# Report types to generate (comma-separated: html,json,junit)
REPORT_TYPES=html

# Report format generation
# Generate Excel report (.xlsx) with modern KPIs and charts
GENERATE_EXCEL_REPORT=true
# Generate PDF report using Playwright (from HTML report)
GENERATE_PDF_REPORT=true

# Report archiving
REPORTS_ZIP_RESULTS=false
REPORTS_KEEP_UNZIPPED=true


# ====================================================================================
# API TESTING CONFIGURATION
# ====================================================================================
# ⚠️ NOTE: Most API properties below are defined but NOT YET INTEGRATED with the API module.
# They are placeholders for future implementation. Currently, API configuration is done
# programmatically in test code using CSAPIClient, CSAPIRunner, and related API classes.
# Only API_BASE_URL is currently used in some legacy code paths.
# ====================================================================================

# API base URL (supports interpolation)
API_BASE_URL=https://api.{ENVIRONMENT}.{PROJECT}.com
# API request timeout in milliseconds
# ⚠️ NOT YET INTEGRATED - Configure timeout programmatically in your API client
API_TIMEOUT=30000
# Default headers (JSON format)
# ⚠️ NOT YET INTEGRATED - Set headers programmatically using CSRequestBuilder
API_DEFAULT_HEADERS={}
# User agent for API requests
# ⚠️ NOT YET INTEGRATED - Set user agent programmatically in request headers
API_USER_AGENT=CS-Test-Automation-Framework/3.0

# API retry configuration
# ⚠️ NOT YET INTEGRATED - Use CSRetryHandler programmatically for retry logic
API_RETRY_COUNT=3
API_RETRY_DELAY=1000

# API logging
# ⚠️ NOT YET INTEGRATED - API logging uses CSReporter directly in code
API_LOG_REQUESTS=true
API_LOG_RESPONSES=true

# Batch API operations
# ⚠️ NOT YET INTEGRATED - Implement fail-fast logic in your test code
API_BATCH_FAIL_FAST=false

# ====================================================================================
# DATABASE CONFIGURATION
# ====================================================================================
# NOTE: Framework uses alias-based multi-database system for maximum flexibility.
# Each database connection is configured using DB_{ALIAS}_* properties.
# See examples below: PRACTICE_MYSQL, MAIN, AUDIT, REPORTING
# ====================================================================================

# Enable database features globally
DB_ENABLED=false

# Auto-rollback transactions after each scenario (useful for test isolation)
DB_AUTO_ROLLBACK=false

# Database runner configuration
# Optional external database configuration file (JSON format with connection configs)
DATABASE_CONFIG_FILE=
# Comma-separated list of database connection aliases to initialize at startup
DATABASE_CONNECTIONS=PRACTICE_MYSQL

# Multi-database connection support (alias-based configurations)
# Replace {ALIAS} with your database alias (e.g., MAIN, AUDIT, REPORTING)
# Each alias creates an independent database connection

# Example configurations for common database aliases:

# Primary database connection (MAIN alias)
DB_MAIN_TYPE=sqlserver
DB_MAIN_HOST=localhost
DB_MAIN_PORT=1433
DB_MAIN_USERNAME=testuser
DB_MAIN_PASSWORD=
DB_MAIN_DATABASE=testdb
DB_MAIN_CONNECTION_TIMEOUT=60000
DB_MAIN_REQUEST_TIMEOUT=15000
DB_MAIN_POOL_MAX=10
DB_MAIN_POOL_MIN=0
DB_MAIN_POOL_IDLE_TIMEOUT=30000

# Audit database connection (AUDIT alias)
DB_AUDIT_TYPE=mysql
DB_AUDIT_HOST=audit-db.company.com
DB_AUDIT_PORT=3306
DB_AUDIT_USERNAME=audit_user
DB_AUDIT_PASSWORD=
DB_AUDIT_DATABASE=audit_db
DB_AUDIT_CONNECTION_TIMEOUT=60000
DB_AUDIT_REQUEST_TIMEOUT=15000
DB_AUDIT_POOL_MAX=5
DB_AUDIT_POOL_MIN=0
DB_AUDIT_POOL_IDLE_TIMEOUT=30000

# Reporting database connection (REPORTING alias)
DB_REPORTING_TYPE=postgresql
DB_REPORTING_HOST=reporting-db.company.com
DB_REPORTING_PORT=5432
DB_REPORTING_USERNAME=reporting_user
DB_REPORTING_PASSWORD=
DB_REPORTING_DATABASE=reporting_db
DB_REPORTING_CONNECTION_TIMEOUT=60000
DB_REPORTING_REQUEST_TIMEOUT=15000
DB_REPORTING_POOL_MAX=3
DB_REPORTING_POOL_MIN=0
DB_REPORTING_POOL_IDLE_TIMEOUT=30000

# Template for additional database connections:
# DB_{ALIAS}_TYPE={database_type}
# DB_{ALIAS}_HOST={host}
# DB_{ALIAS}_PORT={port}
# DB_{ALIAS}_USERNAME={username}
# DB_{ALIAS}_PASSWORD={password}
# DB_{ALIAS}_DATABASE={database_name}
# DB_{ALIAS}_CONNECTION_TIMEOUT=60000
# DB_{ALIAS}_REQUEST_TIMEOUT=15000
# DB_{ALIAS}_POOL_MAX=10
# DB_{ALIAS}_POOL_MIN=0
# DB_{ALIAS}_POOL_IDLE_TIMEOUT=30000

# ====================================================================================
# PRACTICE DATABASE SETTINGS (Free Tier Configurations)
# ====================================================================================

# SQL Fiddle / RunSQL sandbox settings (MySQL)
DB_PRACTICE_MYSQL_TYPE=mysql
DB_PRACTICE_MYSQL_HOST=10.255.255.254
DB_PRACTICE_MYSQL_PORT=13306
DB_PRACTICE_MYSQL_USERNAME=dbuser
DB_PRACTICE_MYSQL_PASSWORD=SecurePassword123!
DB_PRACTICE_MYSQL_DATABASE=corporate_db
DB_PRACTICE_MYSQL_CONNECTION_TIMEOUT=60000
DB_PRACTICE_MYSQL_REQUEST_TIMEOUT=15000
DB_PRACTICE_MYSQL_POOL_MAX=5
DB_PRACTICE_MYSQL_POOL_MIN=0
DB_PRACTICE_MYSQL_POOL_IDLE_TIMEOUT=30000

# PostgreSQL sandbox settings
DB_PRACTICE_POSTGRES_TYPE=postgresql
DB_PRACTICE_POSTGRES_HOST=localhost
DB_PRACTICE_POSTGRES_PORT=5432
DB_PRACTICE_POSTGRES_USERNAME=postgres
DB_PRACTICE_POSTGRES_PASSWORD=
DB_PRACTICE_POSTGRES_DATABASE=testdb
DB_PRACTICE_POSTGRES_CONNECTION_TIMEOUT=60000
DB_PRACTICE_POSTGRES_REQUEST_TIMEOUT=15000
DB_PRACTICE_POSTGRES_POOL_MAX=5
DB_PRACTICE_POSTGRES_POOL_MIN=0
DB_PRACTICE_POSTGRES_POOL_IDLE_TIMEOUT=30000

# Oracle Cloud Always Free Tier settings
DB_PRACTICE_ORACLE_TYPE=oracle
DB_PRACTICE_ORACLE_HOST=your-oracle-cloud-host.oraclecloud.com
DB_PRACTICE_ORACLE_PORT=1521
DB_PRACTICE_ORACLE_USERNAME=admin
DB_PRACTICE_ORACLE_PASSWORD=
DB_PRACTICE_ORACLE_DATABASE=your-service-name
DB_PRACTICE_ORACLE_CONNECTION_TIMEOUT=60000
DB_PRACTICE_ORACLE_REQUEST_TIMEOUT=15000
DB_PRACTICE_ORACLE_POOL_MAX=3
DB_PRACTICE_ORACLE_POOL_MIN=0
DB_PRACTICE_ORACLE_POOL_IDLE_TIMEOUT=30000

# MongoDB Atlas Free Tier settings
DB_PRACTICE_MONGO_TYPE=mongodb
DB_PRACTICE_MONGO_HOST=cluster0.abc123.mongodb.net
DB_PRACTICE_MONGO_PORT=27017
DB_PRACTICE_MONGO_USERNAME=testuser
DB_PRACTICE_MONGO_PASSWORD=
DB_PRACTICE_MONGO_DATABASE=test
DB_PRACTICE_MONGO_CONNECTION_TIMEOUT=60000
DB_PRACTICE_MONGO_REQUEST_TIMEOUT=15000
DB_PRACTICE_MONGO_POOL_MAX=3
DB_PRACTICE_MONGO_POOL_MIN=0
DB_PRACTICE_MONGO_POOL_IDLE_TIMEOUT=30000

# Redis Cloud Free Tier settings
DB_PRACTICE_REDIS_TYPE=redis
DB_PRACTICE_REDIS_HOST=redis-12345.c1.us-east-1-1.ec2.cloud.redislabs.com
DB_PRACTICE_REDIS_PORT=12345
DB_PRACTICE_REDIS_USERNAME=
DB_PRACTICE_REDIS_PASSWORD=
DB_PRACTICE_REDIS_DATABASE=0
DB_PRACTICE_REDIS_CONNECTION_TIMEOUT=60000
DB_PRACTICE_REDIS_REQUEST_TIMEOUT=15000
DB_PRACTICE_REDIS_POOL_MAX=3
DB_PRACTICE_REDIS_POOL_MIN=0
DB_PRACTICE_REDIS_POOL_IDLE_TIMEOUT=30000

# SQL Server practice settings
DB_PRACTICE_MSSQL_TYPE=mssql
DB_PRACTICE_MSSQL_HOST=localhost
DB_PRACTICE_MSSQL_PORT=1433
DB_PRACTICE_MSSQL_USERNAME=sa
DB_PRACTICE_MSSQL_PASSWORD=
DB_PRACTICE_MSSQL_DATABASE=testdb
DB_PRACTICE_MSSQL_CONNECTION_TIMEOUT=60000
DB_PRACTICE_MSSQL_REQUEST_TIMEOUT=15000
DB_PRACTICE_MSSQL_POOL_MAX=5
DB_PRACTICE_MSSQL_POOL_MIN=0
DB_PRACTICE_MSSQL_POOL_IDLE_TIMEOUT=30000

# Practice database connections list (uncomment to enable)
# DATABASE_CONNECTIONS=PRACTICE_MYSQL,PRACTICE_POSTGRES,PRACTICE_ORACLE,PRACTICE_MONGO,PRACTICE_REDIS,PRACTICE_MSSQL

# ====================================================================================
# AZURE DEVOPS INTEGRATION
# ====================================================================================

# Enable Azure DevOps integration
ADO_INTEGRATION_ENABLED=true

# Organization and project settings
ADO_ORGANIZATION=mdakhan
# OR use full URL
ADO_ORGANIZATION_URL=https://dev.azure.com/{ADO_ORGANIZATION}
ADO_PROJECT=myproject
ADO_PROJECT_ID=

# Authentication
# Personal Access Token (use ENCRYPTED: prefix for encrypted tokens)
ADO_PAT=ENCRYPTED:eyJlbmNyeXB0ZWQiOiIycGQ5aWswSUhKUVZDaytmMXBHV2ltaGxKcUF3RTdYWWZ6L2YzZHp0U1M5enlXOE5icitwNUtiSjdZTTNqRmw3c09rNXY5VGtycGk3eG9uV2pMcFpIWnZDWFdGaTgzQW1wMEhQeW44UDNOZzhWSzJLIiwiaXYiOiJVYXBlSUd5N21LVjVEMDB5Yjk2QWp3PT0iLCJ0YWciOiJvOVA4Y3J1NmkxWVhvMnViM1dhVENBPT0ifQ==
# API version
ADO_API_VERSION=7.0

# Test configuration
ADO_TEST_PLAN_ID=417
ADO_TEST_SUITE_ID=418
ADO_BUILD_ID=
ADO_RELEASE_ID=
ADO_ENVIRONMENT=
ADO_RUN_NAME=CS Automated Run - {date} {time}
ADO_AUTOMATED=true

# Upload settings
ADO_UPLOAD_ATTACHMENTS=true
ADO_UPLOAD_SCREENSHOTS=true
ADO_UPLOAD_VIDEOS=true
ADO_UPLOAD_LOGS=true
ADO_UPLOAD_HAR=false
ADO_UPLOAD_TRACES=false

# Test case management
ADO_UPDATE_TEST_CASES=true
ADO_CREATE_BUGS_ON_FAILURE=false

# Bug template settings
ADO_BUG_TITLE_TEMPLATE=Test Failed: {testName}
DEFAULT_BUG_ASSIGNEE=
ADO_BUG_AREA_PATH={project}
ADO_BUG_ITERATION_PATH={project}
ADO_BUG_PRIORITY=2
ADO_BUG_SEVERITY=3 - Medium
ADO_BUG_TAGS=automation,test-failure

# ADO API settings
ADO_API_TIMEOUT=30000
ADO_API_RETRY_COUNT=3
ADO_API_RETRY_DELAY=2000

# ADO Proxy configuration (if behind corporate proxy)
# NOTE: Proxy is enabled by default with organization proxy settings.
# These properties are removed from env files - defaults are in code:
# - ADO_PROXY_ENABLED defaults to true
# - ADO_PROXY_HOST defaults to 'proxy.organization.com'
# - ADO_PROXY_PORT defaults to 8080
# Uncomment below to override defaults or disable proxy:
# ADO_PROXY_ENABLED=false
# ADO_PROXY_HOST=custom-proxy.company.com
# ADO_PROXY_PORT=3128
ADO_PROXY_PROTOCOL=http
ADO_PROXY_AUTH_REQUIRED=false
ADO_PROXY_USERNAME=
ADO_PROXY_PASSWORD=

# ====================================================================================
# AUTHENTICATION & TOKEN MANAGEMENT
# ====================================================================================

# Token storage directory
TOKEN_STORAGE_DIR=./tokens
# Auto-refresh tokens before expiry
TOKEN_AUTO_REFRESH_ENABLED=true
# Refresh tokens N seconds before expiry
TOKEN_REFRESH_BUFFER_TIME=300
# Token refresh retry settings
TOKEN_REFRESH_MAX_RETRIES=3
TOKEN_REFRESH_RETRY_DELAY=5000
# Background token refresh
TOKEN_BACKGROUND_REFRESH=true

# ====================================================================================
# EVIDENCE COLLECTION
# ====================================================================================

# Evidence storage path
EVIDENCE_PATH=./evidence
# Enable evidence collection
EVIDENCE_COLLECTION_ENABLED=true
# Auto-save evidence on test completion
AUTO_SAVE_EVIDENCE=true
# Mask sensitive data in evidence
EVIDENCE_MASK_SENSITIVE_DATA=true
# Package evidence into archive on completion
EVIDENCE_PACKAGE_ON_COMPLETE=false

# ====================================================================================
# PERFORMANCE MONITORING
# ====================================================================================

# Performance metrics directory
PERFORMANCE_METRICS_DIR=./metrics
# Enable Core Web Vitals monitoring
PERFORMANCE_CORE_WEB_VITALS_ENABLED=true
# Enable resource budget monitoring
PERFORMANCE_RESOURCE_BUDGET_ENABLED=true
# Enable system resource monitoring
PERFORMANCE_SYSTEM_BUDGET_ENABLED=false
# Monitoring interval in milliseconds
PERFORMANCE_MONITORING_INTERVAL=1000

# ====================================================================================
# VISUAL TESTING
# ====================================================================================

# Visual comparison threshold (0.0 to 1.0, lower = more strict)
VISUAL_THRESHOLD=0.1
# Baseline images directory
BASELINE_DIR=./baselines
# Visual diff output directory
DIFF_DIR=./diffs

# ====================================================================================
# DASHBOARD CONFIGURATION
# ====================================================================================

# Enable live test execution dashboard
DASHBOARD_ENABLED=false
# WebSocket port for dashboard
DASHBOARD_WS_PORT=8080
# Auto-open dashboard in browser
DASHBOARD_AUTO_OPEN=false

# ====================================================================================
# DATA GENERATION
# ====================================================================================

# Locale for test data generation
DATA_LOCALE=en_US
# Random seed for consistent data generation
DATA_SEED=

# ====================================================================================
# PERFORMANCE OPTIMIZATION
# ====================================================================================

# Lazy loading for faster startup
LAZY_LOADING=true
# Debug mode (enables additional logging and diagnostics)
DEBUG_MODE=false


# ====================================================================================
# CI/CD ENVIRONMENT VARIABLES (READ-ONLY)
# ====================================================================================
# These are automatically detected from CI/CD environments
# CI - Continuous Integration flag
# CI_NAME - Name of CI system (jenkins, azure-devops, github-actions, etc.)
# BUILD_NUMBER - Build number from CI
# BUILD_ID - Build ID from CI
# BRANCH_NAME - Git branch name
# COMMIT_SHA - Git commit SHA
# WORKER_ID - Worker thread identifier
# IS_WORKER - Flag indicating worker thread
# ====================================================================================
# ZERO-CODE / INTELLIGENT STEP EXECUTION (AI-Powered)
# ====================================================================================
# Enable intelligent step execution (no step definitions required)
# When enabled, framework uses AI/NLP to understand and execute steps automatically
# Features:
# - Natural language step understanding
# - Automatic element identification
# - Intelligent action execution  
# - Falls back to custom step definitions if they exist
INTELLIGENT_STEP_EXECUTION_ENABLED=true
# ====================================================================================
